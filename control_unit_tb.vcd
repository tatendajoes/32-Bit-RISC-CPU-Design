$date
   Tue Aug 26 02:29:21 2025
$end
$version
  2020.1
$end
$timescale
  1ps
$end
$scope module control_unit_tb $end
$var reg 7 ! opcode [6:0] $end
$var reg 3 " funct3 [2:0] $end
$var reg 1 # funct7_5 $end
$var wire 1 $ reg_write $end
$var wire 1 % alu_src $end
$var wire 1 & mem_read $end
$var wire 1 ' mem_write $end
$var wire 1 ( mem_to_reg $end
$var wire 1 ) branch $end
$var wire 3 * alu_op [2:0] $end
$scope module uut $end
$var wire 7 + opcode [6:0] $end
$var wire 3 , funct3 [2:0] $end
$var wire 1 - funct7_5 $end
$var reg 1 . reg_write $end
$var reg 1 / alu_src $end
$var reg 1 0 mem_read $end
$var reg 1 1 mem_write $end
$var reg 1 2 mem_to_reg $end
$var reg 1 3 branch $end
$var reg 3 4 alu_op [2:0] $end
$var parameter 3 5 ALU_ADD [2:0] $end
$var parameter 3 6 ALU_SUB [2:0] $end
$var parameter 3 7 ALU_AND [2:0] $end
$var parameter 3 8 ALU_OR [2:0] $end
$var parameter 3 9 ALU_SLT [2:0] $end
$var parameter 7 : OPC_RTYPE [6:0] $end
$var parameter 7 ; OPC_LW [6:0] $end
$var parameter 7 < OPC_SW [6:0] $end
$var parameter 7 = OPC_BEQ [6:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b110011 !
b0 "
0#
1$
0%
0&
0'
0(
0)
b0 *
b110011 +
b0 ,
0-
1.
0/
00
01
02
03
b0 4
b0 5
b1 6
b10 7
b11 8
b100 9
b110011 :
b11 ;
b100011 <
b1100011 =
$end
#10000
b110011 !
b0 "
1#
1$
b1 *
1-
1.
0/
00
01
02
03
b1 4
#20000
b110011 !
b111 "
0#
1$
b10 *
b111 ,
0-
1.
0/
00
01
02
03
b10 4
#30000
b110011 !
b110 "
1$
b11 *
b110 ,
1.
0/
00
01
02
03
b11 4
#40000
b110011 !
b10 "
1$
b100 *
b10 ,
1.
0/
00
01
02
03
b100 4
#50000
b11 !
b10 "
1$
1%
1&
1(
b0 *
b11 +
1.
1/
10
01
12
03
b0 4
#60000
b100011 !
b10 "
0$
1%
0&
1'
0(
b100011 +
0.
1/
00
11
02
03
b0 4
#70000
b1100011 !
b0 "
0%
0'
1)
b1 *
b1100011 +
b0 ,
0.
0/
00
01
02
13
b1 4
#80000
b1111111 !
bx "
x#
0)
b0 *
b1111111 +
bx ,
x-
0.
0/
00
01
02
03
b0 4
